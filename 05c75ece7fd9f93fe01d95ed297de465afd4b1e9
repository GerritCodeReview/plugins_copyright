{
  "comments": [
    {
      "key": {
        "uuid": "0ca536f8_e5e9362a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 82,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-06-06T18:03:58Z",
      "side": 1,
      "message": "Both of these parameters can be null. Please mark them with the com.google.gerrit.common.Nullable annotation so that IDEs and other systems have a chance to automatically mark unsafe usages.\n\nIn addition, can you please check that all usages are guarded against null values? (I at least saw a usage of checkConfig which might run into a NullPointerException.)",
      "range": {
        "startLine": 81,
        "startChar": 2,
        "endLine": 82,
        "endChar": 34
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55643ce7_add28c92",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 82,
      "author": {
        "id": 1073305
      },
      "writtenOn": "2019-06-11T20:25:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ca536f8_e5e9362a",
      "range": {
        "startLine": 81,
        "startChar": 2,
        "endLine": 82,
        "endChar": 34
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b6983df_6710768f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 129,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-06-07T16:43:19Z",
      "side": 1,
      "message": "Even after seeing more of the plugin, I haven\u0027t understood why it\u0027s necessary to read in the config at startup. This might cause some issues. Isn\u0027t it possible to read the settings from the config file whenever necessary instead of having this local memory state? Please shed some light on this.",
      "range": {
        "startLine": 115,
        "startChar": 2,
        "endLine": 129,
        "endChar": 3
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d09f334e_dc5133d1",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 129,
      "author": {
        "id": 1073305
      },
      "writtenOn": "2019-06-11T20:25:48Z",
      "side": 1,
      "message": "It compiles a large regular expression. Using a configuration typical for Android hosts, on my specialist workstation with little or no other load, just compiling the regular expression averages 3.6ms\n\nOn a heavily loaded server running in prod, re-compiling for every change could add too much latency and cpu load.",
      "parentUuid": "0b6983df_6710768f",
      "range": {
        "startLine": 115,
        "startChar": 2,
        "endLine": 129,
        "endChar": 3
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fd1f10a_755e54a7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 188,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-06-06T18:03:58Z",
      "side": 1,
      "message": "Did I understand correctly that \"pluginEnabled\" doesn\u0027t indicate whether the plugin is enabled but whether found issues show up as warning or error lines while still blocking upload? What\u0027s the use case for this?",
      "range": {
        "startLine": 187,
        "startChar": 8,
        "endLine": 188,
        "endChar": 93
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64760978_7d5d1d63",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 188,
      "author": {
        "id": 1073305
      },
      "writtenOn": "2019-06-11T20:25:48Z",
      "side": 1,
      "message": "It\u0027s both. Or rather, whether to treat errors as warnings is derived from whether the plugin is enabled on the host. If the plugin has been explicitly disabled on the server or is not yet enabled on the server, why would it make sense to block changes to the project.config ?\n\nConsider:\n\nScenario 1: While setting up the plugin, someone might want to push the patterns in a separate change from the account and group settings. Before the plugin is enabled, it makes sense to alert folks that things are not ready to enable the plugin until everything is in place, but I can think of neither a business case nor a technical reason to block partial configurations. \"All-or-nothing\" seems inappropriate.\n\nScenario 2: A new version of gerrit and the plugin get pushed to servers causing the plugin to report configuration errors for previously good configurations and blocking all changes to project.config. With this logic, it is possible for on-call to disable the plugin temporarily in the gerrit.config until the release can get fixed or rolled back. In the meantime, it will nag about the project.config changes, but it won\u0027t block anyone from dealing with an emergency.\n\n\nAfter the plugin is enabled on the server, it\u0027s a different story: An error in the configuration could interfere with normal operations so it\u0027s better to force the person pushing the change to fix the problem before letting it on the host.\n\nI changed CheckConfig.checkProjectConfig to clarify.",
      "parentUuid": "3fd1f10a_755e54a7",
      "range": {
        "startLine": 187,
        "startChar": 8,
        "endLine": 188,
        "endChar": 93
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "893e49e9_b78d0ca0",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 196,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-06-06T18:03:58Z",
      "side": 1,
      "message": "Here and for other CommitValidationExceptions: Reading the relevant code paths correctly, this is the message presented to the user upon a failing git push. Was the message formulated with this in mind? Here, it might also make sense to add the plugin name (if you don\u0027t consider it PII and don\u0027t need to hide the name from users) as it\u0027s not automatically added. This would help in failure cases when users complain about a failing pushes and just mention \"project.config\", which could also apply to other Gerrit functionality.",
      "range": {
        "startLine": 196,
        "startChar": 43,
        "endLine": 196,
        "endChar": 76
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0a7558c_d93d129a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 196,
      "author": {
        "id": 1073305
      },
      "writtenOn": "2019-06-11T20:25:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "893e49e9_b78d0ca0",
      "range": {
        "startLine": 196,
        "startChar": 43,
        "endLine": 196,
        "endChar": 76
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5aa92ea_b8663f3f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 200,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-06-06T18:03:58Z",
      "side": 1,
      "message": "Just double checking: Are you sure that you want to send the full exception message to users including maybe very technical aspects and potentially PII? (I didn\u0027t check all code paths to find out what could end up as message in a ConfigInvalidException but I know that it\u0027s also produced in JGit and it could potentially contain anything.)",
      "range": {
        "startLine": 200,
        "startChar": 74,
        "endLine": 200,
        "endChar": 88
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a19a1f7f_0dc834f9",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 200,
      "author": {
        "id": 1073305
      },
      "writtenOn": "2019-06-11T20:25:48Z",
      "side": 1,
      "message": "Yes, I am sure. The message for ConfigInvalidException contains the necessary context for what needs fixing. The messages are derived from the content of the pushed project.config revision so the person pushing the change and all of the reviewers necessarily have access to view those contents.\n\nFurther, assuming a new message, the content will derive from the diff, which will already be published on the review thread and via email.",
      "parentUuid": "e5aa92ea_b8663f3f",
      "range": {
        "startLine": 200,
        "startChar": 74,
        "endLine": 200,
        "endChar": 88
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f79beae5_ca5cebba",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 216,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-06-06T18:03:58Z",
      "side": 1,
      "message": "Throwing an exception in a finally block is heavily discouraged as it will mask any other exceptions which were previously thrown in the try- and catch-blocks. Among other things, this can complicate debugging. Are you sure you want to do it this way?",
      "range": {
        "startLine": 216,
        "startChar": 8,
        "endLine": 216,
        "endChar": 59
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e14ffcd0_55ae2823",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 216,
      "author": {
        "id": 1073305
      },
      "writtenOn": "2019-06-11T20:25:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f79beae5_ca5cebba",
      "range": {
        "startLine": 216,
        "startChar": 8,
        "endLine": 216,
        "endChar": 59
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2d0483d_8137b489",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 301,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-06-06T18:03:58Z",
      "side": 1,
      "message": "finally-blocks in Java have some special properties/behavior and are typically meant for closing resources. All of this code, especially the reviewApi.reportConfigMessages(..) call, represents a lot of work/logic. I\u0027m pretty sure that doing all of this inside of a finally-block could have some unintended side-effects. The above mentioned issue with exception masking is one of those. Can you please find a way such that this code is not called inside of a finally-block? (I can give you suggestions if you need those.)",
      "range": {
        "startLine": 281,
        "startChar": 6,
        "endLine": 301,
        "endChar": 7
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a33cb11_76a3bf0f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 301,
      "author": {
        "id": 1073305
      },
      "writtenOn": "2019-06-11T20:25:48Z",
      "side": 1,
      "message": "Ack\n\nIn this context, the risk and consequences of masking a runtime exception are minimal. And in any case, all of this code will change before deploying when the check gets moved to a background thread.",
      "parentUuid": "e2d0483d_8137b489",
      "range": {
        "startLine": 281,
        "startChar": 6,
        "endLine": 301,
        "endChar": 7
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3be7b489_39a0d9ab",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 357,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-06-06T18:03:58Z",
      "side": 1,
      "message": "This method should be marked with @Nullable.",
      "range": {
        "startLine": 357,
        "startChar": 22,
        "endLine": 357,
        "endChar": 32
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "223e7057_897065b3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 357,
      "author": {
        "id": 1073305
      },
      "writtenOn": "2019-06-11T20:25:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3be7b489_39a0d9ab",
      "range": {
        "startLine": 357,
        "startChar": 22,
        "endLine": 357,
        "endChar": 32
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6aac5b5c_ba1d815a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 371,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-06-06T18:03:58Z",
      "side": 1,
      "message": "This depends on which kind of error and message should be reported to the user. IllegalStateException would be an internal server error, represented by a 500. The kind of chosen RestApiException would determine the HTTP error code and the specified message would be sent to the user.",
      "range": {
        "startLine": 371,
        "startChar": 6,
        "endLine": 371,
        "endChar": 55
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6e7adca_a00d1197",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 371,
      "author": {
        "id": 1073305
      },
      "writtenOn": "2019-06-11T20:25:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6aac5b5c_ba1d815a",
      "range": {
        "startLine": 371,
        "startChar": 6,
        "endLine": 371,
        "endChar": 55
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca0f6b3f_849e7fec",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 389,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-06-06T18:03:58Z",
      "side": 1,
      "message": "Is it guaranteed that this is not null? (I get a warning in my IDE and the Javadoc description of this parameter lets me think that it can indeed be null here.)",
      "range": {
        "startLine": 389,
        "startChar": 54,
        "endLine": 389,
        "endChar": 70
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "053971f1_1481e18d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 389,
      "author": {
        "id": 1073305
      },
      "writtenOn": "2019-06-11T20:25:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca0f6b3f_849e7fec",
      "range": {
        "startLine": 389,
        "startChar": 54,
        "endLine": 389,
        "endChar": 70
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22f71ab7_7933b7c3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 403,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-06-06T18:03:58Z",
      "side": 1,
      "message": "RevWalks must be closed after use. Please use a try-with-resources statement.",
      "range": {
        "startLine": 403,
        "startChar": 4,
        "endLine": 403,
        "endChar": 35
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d58444a5_b4c16fbc",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 403,
      "author": {
        "id": 1073305
      },
      "writtenOn": "2019-06-11T20:25:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "22f71ab7_7933b7c3",
      "range": {
        "startLine": 403,
        "startChar": 4,
        "endLine": 403,
        "endChar": 35
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b1aaea2_68332acd",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 405,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-06-06T18:03:58Z",
      "side": 1,
      "message": "I don\u0027t know if this can happen for real but TreeWalk#forPath can return a null object if the file wasn\u0027t found, which would result in a NPE with the current code.",
      "range": {
        "startLine": 405,
        "startChar": 9,
        "endLine": 405,
        "endChar": 39
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "117bed7a_7c71a230",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/CopyrightConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 405,
      "author": {
        "id": 1073305
      },
      "writtenOn": "2019-06-11T20:25:48Z",
      "side": 1,
      "message": "Ack\n\nIf an IllegalStateException gets translated into a 500, I assume an NPE does too. That seems like the appropriate outcome given it would either mean a serious programming error or gerrit so badly broken it cannot find the files in the current revision.",
      "parentUuid": "6b1aaea2_68332acd",
      "range": {
        "startLine": 405,
        "startChar": 9,
        "endLine": 405,
        "endChar": 39
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e9cdbe5_17c26aeb",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/lib/Archive.java",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-06-07T16:43:19Z",
      "side": 1,
      "message": "FYI: This is one of the classes I won\u0027t review as it doesn\u0027t seem to be run as part of the plugin or interact with Gerrit in any way. (This class is only used by ScanTool.)",
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e62b3e4_5f589a1a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/tools/AndroidScan.java",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-06-07T16:43:19Z",
      "side": 1,
      "message": "FYI: This is one of the classes I won\u0027t review as it doesn\u0027t seem to be run as part of the plugin or interact with Gerrit in any way.",
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15ba037e_57318b10",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/tools/ScanTool.java",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-06-07T16:43:19Z",
      "side": 1,
      "message": "FYI: This is one of the classes I won\u0027t review as it doesn\u0027t seem to be run as part of the plugin or interact with Gerrit in any way.",
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1cc37990_aea0af6c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/tools/ScanTool.java",
        "patchSetId": 7
      },
      "lineNbr": 319,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-06-07T16:43:19Z",
      "side": 1,
      "message": "Passing on a warning from my IDE for this and the other input streams: This input stream is used without a try-with-resources statement (\u003d stream not closed).",
      "range": {
        "startLine": 319,
        "startChar": 28,
        "endLine": 319,
        "endChar": 54
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd2e73c4_77cd1d35",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/copyright/tools/ScanTool.java",
        "patchSetId": 7
      },
      "lineNbr": 319,
      "author": {
        "id": 1073305
      },
      "writtenOn": "2019-06-11T20:25:48Z",
      "side": 1,
      "message": "Nevertheless, it would be an error to call close on these derived and possibly embedded streams. Is there a pragma or annotation we can use to make your IDE warning go away?",
      "parentUuid": "1cc37990_aea0af6c",
      "range": {
        "startLine": 319,
        "startChar": 28,
        "endLine": 319,
        "endChar": 54
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fa9fc03_bf8ce000",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/copyright/lib/ArchiveTest.java",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-06-07T16:43:19Z",
      "side": 1,
      "message": "FYI: This is one of the classes I won\u0027t review as it only encompasses tests for code which isn\u0027t run as part of the plugin or interacts with Gerrit in any way.",
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be84776d_8bab6104",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/copyright/tools/AndroidScanTest.sh",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-06-07T16:43:19Z",
      "side": 1,
      "message": "FYI: This is one of the classes I won\u0027t review as it only encompasses tests for code which isn\u0027t run as part of the plugin or interacts with Gerrit in any way.",
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0a25723_ce1228f5",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/copyright/tools/ScanToolTest.sh",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-06-07T16:43:19Z",
      "side": 1,
      "message": "FYI: This is one of the classes I won\u0027t review as it only encompasses tests for code which isn\u0027t run as part of the plugin or interacts with Gerrit in any way.",
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f837e002_eb03723a",
        "filename": "tools/android_scan.sh",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-06-07T16:43:19Z",
      "side": 1,
      "message": "FYI: This is one of the classes I won\u0027t review as it doesn\u0027t seem to be run as part of the plugin or interact with Gerrit in any way.",
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e6f9a27_75eeb0de",
        "filename": "tools/check_new_config.sh",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-06-07T16:43:19Z",
      "side": 1,
      "message": "FYI: This is one of the classes I won\u0027t review as it doesn\u0027t seem to be run as part of the plugin or interact with Gerrit in any way.",
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "267aef20_8a75879a",
        "filename": "tools/check_new_config.sh",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-06-07T16:43:19Z",
      "side": 1,
      "message": "echo",
      "range": {
        "startLine": 37,
        "startChar": 6,
        "endLine": 37,
        "endChar": 10
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e0bee3b_22d4e5c1",
        "filename": "tools/check_new_config.sh",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 1073305
      },
      "writtenOn": "2019-06-11T20:25:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "267aef20_8a75879a",
      "range": {
        "startLine": 37,
        "startChar": 6,
        "endLine": 37,
        "endChar": 10
      },
      "revId": "05c75ece7fd9f93fe01d95ed297de465afd4b1e9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}